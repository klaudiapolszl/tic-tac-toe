{"version":3,"sources":["components/Square.js","components/Board.js","components/Game.js","index.js"],"names":["Square","props","className","onClick","value","Board","row","col","board","squareCounter","i","columns","j","push","this","renderSquare","key","squares","createBoard","React","Component","Game","state","history","Array","fill","xIsNext","stepNumber","slice","length","calculateWinner","setState","concat","currentLocation","getLocation","step","status","current","winner","moves","map","move","desc","jumpTo","handleClick","lines","a","b","c","0","1","2","3","4","5","6","7","8","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.836be0d5.chunk.js","sourcesContent":["import React from 'react';\r\n\r\nconst Square = props => {\r\n    return (\r\n        <button\r\n            className=\"square\"\r\n            onClick={ () => props.onClick() }\r\n        >\r\n            { props.value }\r\n        </button>\r\n    );\r\n};\r\n\r\nexport default Square;\r\n","import React from 'react';\r\nimport Square from './Square';\r\n\r\nclass Board extends React.Component {\r\n\r\n    createBoard(row, col) {\r\n        const board = [];\r\n        let squareCounter = 0;\r\n\r\n        for (let i = 0; i < row; i ++) {\r\n            const columns = [];\r\n            for (let j = 0; j < col; j ++) {\r\n                columns.push(this.renderSquare(squareCounter++));\r\n            }\r\n            board.push(\r\n                <div key={ i } className=\"board-row\">\r\n                    { columns }\r\n                </div>\r\n            );\r\n        }\r\n        return board;\r\n    }\r\n\r\n    renderSquare(i) {\r\n        return (\r\n            <Square\r\n                key={ i }\r\n                value={ this.props.squares[i] }\r\n                onClick={ () => this.props.onClick(i) }\r\n            />\r\n        );\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <div>\r\n                { this.createBoard(3, 3) }\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default Board;\r\n","import React from 'react';\r\nimport Board from './Board';\r\n\r\nclass Game extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            history: [{\r\n                squares: Array(9).fill(null),\r\n            }],\r\n            xIsNext: true,\r\n            stepNumber: 0\r\n        }\r\n    }\r\n\r\n    handleClick(i) {\r\n        const history = this.state.history.slice(0, this.state.stepNumber + 1);\r\n        const current = history[history.length - 1];\r\n        const squares = current.squares.slice();\r\n\r\n        if (calculateWinner(squares) || squares[i]) {\r\n            return;\r\n        }\r\n        squares[i] = this.state.xIsNext ? \"X\" : \"O\";\r\n\r\n        this.setState({\r\n            history: history.concat([{\r\n                squares: squares,\r\n                currentLocation: getLocation(i)\r\n            }]),\r\n            stepNumber: history.length,\r\n            xIsNext: !this.state.xIsNext\r\n        });\r\n    }\r\n\r\n    jumpTo(step) {\r\n        this.setState({\r\n            stepNumber: step,\r\n            xIsNext: (step % 2) === 0\r\n        });\r\n    }\r\n\r\n    render() {\r\n        const history = this.state.history;\r\n        const current = history[this.state.stepNumber];\r\n        const winner = calculateWinner(current.squares);\r\n\r\n        const moves = history.map((step,move) => {\r\n            const currentLocation = step.currentLocation ? step.currentLocation : \" \";\r\n            const desc = move ? 'Go to move #' + move : 'Go to the beginning of the game';\r\n            return (\r\n                <li key={ move }>\r\n                    <button  className={ move === this.state.stepNumber ? \"history-btn history-btn--selected\" : \"history-btn\"} onClick={ () => this.jumpTo(move) }>\r\n                        { desc } { currentLocation }\r\n                    </button>\r\n                </li>\r\n            );\r\n        })\r\n\r\n        let status;\r\n        if (winner) {\r\n            status = 'The winner is ' + winner;\r\n        } else if (history.length === 10) {\r\n            status = 'No one won';\r\n        } else {\r\n            status = 'Next player is ' + (this.state.xIsNext ? 'X' : 'O');\r\n        }\r\n\r\n        return(\r\n            <div className=\"main-container\">\r\n                <div className=\"main-container-title\">Tic Tac Toe Game</div>\r\n                <div className=\"game\">\r\n                    <div className=\"game-board\">\r\n                        <Board\r\n                            squares={ current.squares }\r\n                            onClick = { (i) => this.handleClick(i) }\r\n                        />\r\n                    </div>\r\n                    <div className=\"game-info\">\r\n                        <div className=\"game-info-status\">{ status }</div>\r\n                        <ol className=\"game-info-moves\">{ moves }</ol>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nconst calculateWinner = (squares) => {\r\n    const lines = [\r\n        [0,1,2],\r\n        [3,4,5],\r\n        [6,7,8],\r\n        [0,3,6],\r\n        [1,4,7],\r\n        [2,5,8],\r\n        [0,4,8],\r\n        [2,4,6],\r\n    ];\r\n\r\n    for (let i=0; i<lines.length; i++){\r\n        const [a,b,c] = lines[i];\r\n        if (squares[a] === squares[b] && squares[a] === squares[c]){\r\n            return squares[a];\r\n        }\r\n    }\r\n    return null;\r\n};\r\n\r\nconst getLocation = (move) => {\r\n    const locationMap = {\r\n        0: ' (location: row: 1, col: 1)',\r\n        1: ' (location: row: 1, col: 2)',\r\n        2: ' (location: row: 1, col: 3)',\r\n        3: ' (location: row: 2, col: 1)',\r\n        4: ' (location: row: 2, col: 2)',\r\n        5: ' (location: row: 2, col: 3)',\r\n        6: ' (location: row: 3, col: 1)',\r\n        7: ' (location: row: 3, col: 2)',\r\n        8: ' (location: row: 3, col: 3)',\r\n    };\r\n\r\n    return locationMap[move];\r\n};\r\n\r\nexport default Game;\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport Game from './components/Game';\r\nimport './styles/style.scss';\r\nimport './styles/responsive.scss';\r\n\r\nReactDOM.render(<Game />, document.getElementById('root'));\r\n"],"sourceRoot":""}